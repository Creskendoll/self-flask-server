{"version":3,"sources":["firebase.ts","utils.ts","dbUtils.ts","SetupPage.tsx","LoveButton.tsx","WidgetPage.tsx","App.tsx","useLocalStorage.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","capFChar","s","trim","replace","split","map","w","w_t","toUpperCase","slice","join","serverizeStr","toLowerCase","db","firestore","recipients","collection","loves","getServerTime","FieldValue","serverTimestamp","sortDate","a","b","aCreated","data","bCreated","toDate","getTime","Date","addRecipients","r1","r2","safe_r1","safe_r2","doc","get","exists","set","name","createdBy","createdOn","addLove","from","to","add","useStyle","makeStyles","theme","center","textAlign","inputContainer","alignItems","display","marginTop","spacing","button","pulse","animation","TextField","withStyles","root","borderColor","palette","secondary","main","primary","MUITextField","SetupPage","onDone","initValue","React","useState","setFrom","setTo","loading","setLoading","handleStart","handleKeyDown","event","keyCode","Box","className","Grid","container","item","xs","sm","Typography","color","variant","gutterBottom","md","fullWidth","label","value","onKeyDown","onChange","e","target","fontSize","CircularProgress","Button","size","onClick","clsx","disabled","startIcon","endIcon","heartIcon","tada","bounceIn","pulseExit","LoveButton","loved","setLoved","IconButton","setTimeout","headCell","fontWeight","grid","justifyContent","marginBottom","zoomIn","bgPrimary","backgroundColor","bgSecondary","WidgetPage","onExit","setLoves","useEffect","undefined","recipient","then","safe_r","where","onSnapshot","qs1","qs2","res","docs","sort","loveTime","reverse","getLovesFor","byHour","reduce","acc","l","Array","fill","getHours","groupByHour","chartData","labels","keys","n","datasets","style","position","zIndex","left","top","transform","length","TableContainer","component","Paper","maxHeight","overflow","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","i","toLocaleString","createMuiTheme","light","text","background","default","paper","card","willChange","margin","right","front","back","App","key","initialValue","readValue","window","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","useLocalStorage","savedRecs","saveRecs","isFront","setIsFront","setRecipients","useSpring","opacity","config","mass","tension","friction","ThemeProvider","Container","maxWidth","div","interpolate","o","t","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.662642fe.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC5QyntgrLN1ALcXxfQE57M3XIOkVdkTvc\",\n    authDomain: \"liebe-counter.firebaseapp.com\",\n    projectId: \"liebe-counter\",\n    storageBucket: \"liebe-counter.appspot.com\",\n    messagingSenderId: \"874173058428\",\n    appId: \"1:874173058428:web:b71371efc06770ab2968f9\",\n    measurementId: \"G-FDRD0P1727\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","export const capFChar = (s: string) => {\n    if (!s) return \"\";\n\n    const words = s.trim().replace(/\\s+/g, \" \").split(\" \");\n    const capped = words.map((w) => {\n        const w_t = w.trim();\n        return w_t[0].toUpperCase() + w_t.slice(1);\n    });\n\n    return capped.join(\" \");\n};\n\nexport function groupByHour(loves: any[]) {\n    return loves.reduce((acc, l) => {\n        const from = serverizeStr(l.from);\n        if (!acc[from]) acc[from] = Array(24).fill(0);\n        acc[from][l.createdOn.getHours()]++;\n        return acc;\n    }, {});\n}\n\nexport const serverizeStr = (s: string) =>\n    s.toLowerCase().trim().replace(/\\s+/g, \" \");\n","import firebase from \"./firebase\";\nimport \"firebase/firestore\";\nimport { serverizeStr } from \"./utils\";\n\nconst db = firebase.firestore();\nconst recipients = db.collection(\"@recipients\");\nconst loves = db.collection(\"@loves\");\n\nconst getServerTime = () => firebase.firestore.FieldValue.serverTimestamp();\n\ntype DocSnap = firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>;\nfunction sortDate(a: DocSnap, b: DocSnap): any {\n    const aCreated = a.data()[\"createdOn\"];\n    const bCreated = b.data()[\"createdOn\"];\n\n    const A = aCreated ? aCreated.toDate().getTime() : new Date().getTime();\n    const B = bCreated ? bCreated.toDate().getTime() : new Date().getTime();\n    return A - B;\n}\n\nexport async function addRecipients(r1: string, r2: string) {\n    const safe_r1 = serverizeStr(r1);\n    const safe_r2 = serverizeStr(r2);\n\n    const r1Exists = (await recipients.doc(safe_r1).get()).exists;\n    if (!r1Exists) {\n        await recipients.doc(safe_r1).set({\n            name: safe_r1,\n            createdBy: safe_r1,\n            createdOn: getServerTime(),\n        });\n    }\n\n    const r2Exists = (await recipients.doc(safe_r2).get()).exists;\n    if (!r2Exists) {\n        await recipients.doc(safe_r2).set({\n            name: safe_r2,\n            createdBy: safe_r1,\n            createdOn: getServerTime(),\n        });\n    }\n}\n\nexport function getLovesFor(recipient: string, then: (res: any[]) => void) {\n    const safe_r = serverizeStr(recipient);\n\n    loves.where(\"to\", \"==\", safe_r).onSnapshot((qs1) => {\n        loves.where(\"from\", \"==\", safe_r).onSnapshot((qs2) => {\n            const res = [...qs1.docs, ...qs2.docs].sort(sortDate).map((doc) => {\n                const from = doc.data()[\"from\"];\n                const to = doc.data()[\"to\"];\n                const loveTime = doc.data()[\"createdOn\"];\n\n                return {\n                    from,\n                    to,\n                    createdOn: loveTime ? loveTime.toDate() : new Date(),\n                };\n            });\n\n            then(res.reverse());\n        });\n    });\n}\n\nexport async function addLove(from: string, to: string) {\n    await loves.add({\n        to: serverizeStr(to),\n        from: serverizeStr(from),\n        createdOn: getServerTime(),\n    });\n}\n\nexport function getLovesBetween(\n    r1: string,\n    r2: string,\n    then: (res: any[]) => void\n) {\n    const safe_r1 = serverizeStr(r1);\n    const safe_r2 = serverizeStr(r2);\n\n    loves\n        .where(\"from\", \"in\", [safe_r1, safe_r2])\n        .onSnapshot((querySnapshot1) => {\n            loves\n                .where(\"to\", \"in\", [safe_r1, safe_r2])\n                .onSnapshot((querySnapshot2) => {\n                    const res1 = querySnapshot1.docs;\n                    const res2 = querySnapshot2.docs;\n                    const res = res1\n                        .concat(res2)\n                        .sort(sortDate)\n                        .map((l) => {\n                            const from = l.data()[\"from\"];\n                            const to = l.data()[\"to\"];\n                            const loveTime = l.data()[\"createdOn\"];\n\n                            return {\n                                from,\n                                to,\n                                createdOn: loveTime\n                                    ? loveTime.toDate()\n                                    : new Date(),\n                            };\n                        });\n\n                    then(res.reverse());\n                });\n        });\n}\n","import React from \"react\";\nimport {\n    Box,\n    Button,\n    CircularProgress,\n    Grid,\n    makeStyles,\n    Typography,\n    withStyles,\n} from \"@material-ui/core\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MUITextField from \"@material-ui/core/TextField\";\nimport { pulse } from \"react-animations\";\nimport clsx from \"clsx\";\nimport { addRecipients } from \"./dbUtils\";\n\nconst useStyle = makeStyles((theme) => ({\n    center: {\n        textAlign: \"center\",\n    },\n    inputContainer: {\n        alignItems: \"center\",\n        display: \"inline-flex\",\n        marginTop: theme.spacing(10),\n    },\n    button: {},\n    \"@keyframes pulse\": pulse,\n    pulse: {\n        animation: `$pulse 1000ms`,\n    },\n}));\nconst TextField = withStyles((theme) => ({\n    root: {\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                borderColor: theme.palette.secondary.main,\n            },\n            \"&:hover fieldset\": {\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n}))(MUITextField);\n\nexport default function SetupPage({ onDone, initValue }) {\n    const s = useStyle();\n    const [from, setFrom] = React.useState(initValue ? initValue.from : \"\");\n    const [to, setTo] = React.useState(initValue ? initValue.to : \"\");\n    const [loading, setLoading] = React.useState(false);\n\n    const handleStart = async () => {\n        if (from !== \"\" && to !== \"\") {\n            setLoading(true);\n            await addRecipients(from, to);\n            onDone(from, to);\n            setLoading(false);\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            handleStart();\n        }\n    };\n\n    return (\n        <Box className={s.center}>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={2}>\n                    <Typography color=\"textPrimary\" variant=\"h3\">\n                        💙\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <Typography color=\"textPrimary\" variant=\"h3\">\n                        Love Counter\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                    <Typography color=\"textPrimary\" variant=\"h3\">\n                        💙\n                    </Typography>\n                </Grid>\n            </Grid>\n\n            <Typography color=\"textPrimary\" gutterBottom variant=\"h5\">\n                Enter your names below to start sending love.\n            </Typography>\n            <Grid container spacing={3} className={s.inputContainer}>\n                <Grid item xs={12} sm={5} md={4}>\n                    <TextField\n                        fullWidth\n                        label=\"Your Name\"\n                        variant=\"outlined\"\n                        value={from}\n                        onKeyDown={handleKeyDown}\n                        onChange={(e) => setFrom(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={2} md={1}>\n                    <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n                </Grid>\n                <Grid item xs={12} sm={5} md={3}>\n                    <TextField\n                        fullWidth\n                        label=\"Their Name\"\n                        variant=\"outlined\"\n                        value={to}\n                        onKeyDown={handleKeyDown}\n                        onChange={(e) => setTo(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={12} md={4}>\n                    {loading ? (\n                        <CircularProgress color=\"primary\" />\n                    ) : (\n                        <Button\n                            fullWidth\n                            size=\"large\"\n                            onClick={handleStart}\n                            className={clsx(s.button, {\n                                [s.pulse]: from !== \"\" && to !== \"\",\n                            })}\n                            disabled={from === \"\" || to === \"\"}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            startIcon={<FavoriteIcon />}\n                            endIcon={<FavoriteIcon />}\n                        >\n                            Start\n                        </Button>\n                    )}\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport clsx from \"clsx\";\nimport { tada, bounceIn } from \"react-animations\";\n\nconst useStyle = makeStyles((theme) => ({\n    button: {},\n    heartIcon: {},\n    \"@keyframes tada\": tada,\n    pulse: {\n        animation: `$tada 1000ms`,\n    },\n    \"@keyframes bounceIn\": bounceIn,\n    pulseExit: {\n        animation: `$bounceIn 1000ms`,\n    },\n\n    \"@media (min-width: 0px)\": {\n        heartIcon: {\n            fontSize: \"10rem\",\n        },\n    },\n    \"@media (min-width: 960px)\": {\n        heartIcon: {\n            fontSize: \"20rem\",\n        },\n    },\n}));\n\nexport default function LoveButton({ onClick }) {\n    const s = useStyle();\n    const [loved, setLoved] = React.useState(false);\n\n    return (\n        <IconButton\n            onClick={() => {\n                setLoved(true);\n                setTimeout(() => setLoved(false), 2000);\n                onClick();\n            }}\n            className={clsx(s.button, {\n                [s.pulse]: loved,\n                [s.pulseExit]: !loved,\n            })}\n            color=\"primary\"\n        >\n            {loved ? (\n                <FavoriteIcon className={s.heartIcon} />\n            ) : (\n                <FavoriteBorderIcon className={s.heartIcon} />\n            )}\n        </IconButton>\n    );\n}\n","import React from \"react\";\nimport LoveButton from \"./LoveButton\";\nimport {\n    Box,\n    Table,\n    TableContainer,\n    TableRow,\n    TableCell,\n    TableHead,\n    TableBody,\n    Paper,\n    makeStyles,\n    IconButton,\n    Typography,\n    Grid,\n} from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { zoomIn } from \"react-animations\";\nimport { addLove, getLovesFor } from \"./dbUtils\";\nimport { capFChar, groupByHour, serverizeStr } from \"./utils\";\nimport clsx from \"clsx\";\nimport { Line } from \"react-chartjs-2\";\n\nconst useStyle = makeStyles((theme) => ({\n    center: {\n        textAlign: \"center\",\n    },\n    headCell: {\n        fontSize: \"1.2rem\",\n        fontWeight: \"bold\",\n    },\n    grid: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    \"@keyframes zoomIn\": zoomIn,\n    zoomIn: {\n        animation: `$zoomIn 500ms`,\n    },\n    bgPrimary: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    bgSecondary: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n}));\n\nexport default function WidgetPage({ onExit, recipients }) {\n    const s = useStyle();\n    const [loves, setLoves] = React.useState<undefined | any[]>();\n\n    React.useEffect(() => {\n        setLoves(undefined);\n        if (\n            !recipients.from ||\n            !recipients.to ||\n            recipients.from === \"\" ||\n            recipients.to === \"\"\n        ) {\n            return;\n        }\n        function fetchLoves() {\n            getLovesFor(recipients.from, function (res) {\n                setLoves(res);\n            });\n        }\n\n        if (recipients.from !== \"\" && recipients.to !== \"\") {\n            fetchLoves();\n        }\n    }, [recipients]);\n\n    const byHour = groupByHour(loves || []);\n    const chartData = {\n        labels: [...Array(24).keys()].map(n => `${n}:00`),\n        datasets: [{\n            label: recipients.from,\n            borderColor: \"#F00\",\n            backgroundColor: \"#F00\",\n            fill: false,\n            data: byHour[serverizeStr(recipients.from)]\n        }, {\n            label: recipients.to,\n            borderColor: \"#00F\",\n            backgroundColor: \"#00F\",\n            fill: false,\n            data: byHour[serverizeStr(recipients.to)]\n        }]\n    }\n\n    return (\n        <Box className={s.center}>\n            <IconButton\n                style={{\n                    position: \"absolute\",\n                    zIndex: 9999,\n                    left: 0,\n                    top: 0,\n                }}\n                onClick={onExit}\n            >\n                <ExitToAppIcon\n                    style={{\n                        transform: \"scaleX(-1)\",\n                        fontSize: \"2.5rem\",\n                    }}\n                    color=\"primary\"\n                />\n            </IconButton>\n\n            <Grid container spacing={3} className={s.grid}>\n                <Grid item xs={12} md={4}>\n                    <Typography color=\"textPrimary\" variant=\"h4\">\n                        {capFChar(recipients.from)}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <LoveButton\n                        onClick={async () => {\n                            await addLove(recipients.from, recipients.to);\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Typography color=\"textPrimary\" variant=\"h4\">\n                        {capFChar(recipients.to)}\n                    </Typography>\n                </Grid>\n\n                {loves && loves.length !== 0 ? (\n                    <Grid item xs={12}>\n                        <TableContainer\n                            component={Paper}\n                            className={s.zoomIn}\n                            style={{ maxHeight: \"40vh\", overflow: \"auto\" }}\n                        >\n                            <Table stickyHeader>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={s.headCell}>\n                                            From\n                                </TableCell>\n                                        <TableCell className={s.headCell} align=\"right\">\n                                            To\n                                </TableCell>\n                                        <TableCell className={s.headCell} align=\"right\">\n                                            Time\n                                </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loves.map((l, i) => (\n                                        <TableRow\n                                            className={clsx(s.bgPrimary, {\n                                                [s.bgSecondary]:\n                                                    capFChar(l.from) ===\n                                                    capFChar(recipients.from),\n                                            })}\n                                            key={i}\n                                        >\n                                            <TableCell>{capFChar(l.from)}</TableCell>\n                                            <TableCell align=\"right\">\n                                                {capFChar(l.to)}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {l.createdOn.toLocaleString(\"tr-TR\")}\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                ) : (\n                    <Typography color=\"textPrimary\" variant=\"h4\">\n                        Send your love by clicking the heart!\n                    </Typography>\n                )}\n\n                <Grid item xs={12}>\n                    <Line\n                        data={chartData}\n                    />\n                </Grid>\n\n            </Grid>\n        </Box>\n    );\n}\n","import React from \"react\";\nimport {\n    Container,\n    makeStyles,\n    ThemeProvider,\n    createMuiTheme,\n} from \"@material-ui/core\";\nimport SetupPage from \"./SetupPage\";\nimport WidgetPage from \"./WidgetPage\";\nimport { useSpring, animated } from \"react-spring\";\nimport clsx from \"clsx\";\nimport useLocalStorage from \"./useLocalStorage\";\n\n// https://material-ui.com/customization/default-theme/\n// https://colorhunt.co/palette/167893\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#3282b8\",\n            light: \"#bbe1fa\",\n        },\n        secondary: {\n            main: \"#0f4c75\",\n            light: \"#b7bdc3\",\n        },\n        text: {\n            primary: \"#fcf8ec\",\n            secondary: \"#d0e8f2\",\n        },\n        background: {\n            default: \"#1b262c\",\n            paper: \"#0f4c75\",\n        },\n    },\n});\n\nconst useStyle = makeStyles((theme) => ({\n    card: {\n        willChange: \"transform, opacity\",\n        position: \"absolute\",\n        margin: 0,\n        left: 0,\n        right: 0,\n    },\n    front: {\n        top: \"10%\",\n    },\n    back: {},\n    top: {\n        zIndex: 99,\n    },\n}));\n\nfunction App() {\n    const s = useStyle();\n    const [savedRecs, saveRecs] = useLocalStorage<{\n        from: string;\n        to: string;\n    } | null>(\"@recipients\", null);\n    const [isFront, setIsFront] = React.useState(savedRecs ? false : true);\n    const [recipients, setRecipients] = React.useState(\n        savedRecs || { from: \"\", to: \"\" }\n    );\n\n    const { transform, opacity } = useSpring({\n        opacity: isFront ? 0 : 1,\n        transform: `perspective(1000px) rotateX(${isFront ? 0 : 180}deg)`,\n        config: { mass: 6, tension: 400, friction: 80 },\n    });\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container maxWidth=\"lg\">\n                <div\n                    style={{\n                        position: \"relative\",\n                    }}\n                >\n                    <animated.div\n                        className={clsx(s.card, s.front, {\n                            [s.top]: isFront,\n                        })}\n                        style={{\n                            opacity: opacity.interpolate(\n                                (o) => 1 - (o as number)\n                            ),\n                            transform,\n                        }}\n                    >\n                        <SetupPage\n                            initValue={recipients}\n                            onDone={(from, to) => {\n                                saveRecs({ from, to });\n                                setRecipients({ from, to });\n\n                                setIsFront(false);\n                            }}\n                        />\n                    </animated.div>\n                    <animated.div\n                        className={clsx(s.card, s.back, {\n                            [s.top]: !isFront,\n                        })}\n                        style={{\n                            opacity,\n                            transform: transform.interpolate(\n                                (t) => `${t} rotateX(180deg)`\n                            ),\n                        }}\n                    >\n                        <WidgetPage\n                            recipients={recipients}\n                            onExit={() => {\n                                saveRecs(null);\n                                setIsFront(true);\n                            }}\n                        />\n                    </animated.div>\n                </div>\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\n\n// https://usehooks-typescript.com/use-local-storage/\nexport default function useLocalStorage<T>(key: string, initialValue: T) {\n    // Get from local storage then\n    // parse stored json or return initialValue\n    const readValue = () => {\n        // Prevent build error \"window is undefined\" but keep keep working\n        if (typeof window === \"undefined\") {\n            return initialValue;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    };\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(readValue);\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value: T) => {\n        // Prevent build error \"window is undefined\" but keep keep working\n        if (typeof window === \"undefined\") {\n            console.warn(\n                `Tried setting localStorage key “${key}” even though environment is not a client`\n            );\n        }\n        try {\n            // Allow value to be a function so we have the same API as useState\n            const newValue =\n                value instanceof Function ? value(storedValue) : value;\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            // Save state\n            setStoredValue(newValue);\n            // We dispatch a custom event so every useLocalStorage hook are notified\n            window.dispatchEvent(new Event(\"local-storage\"));\n        } catch (error) {\n            console.warn(`Error setting localStorage key “${key}”:`, error);\n        }\n    };\n    // Read latest value from LocalStorage on hook mount\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    // Keep all instances hook sync\n    useEffect(() => {\n        const handleStorageChange = () => {\n            setStoredValue(readValue());\n        };\n\n        // this only works for other documents, not the current one\n        window.addEventListener(\"storage\", handleStorageChange);\n        // this is a custom event, triggered in writeValueToLocalStorage\n        window.addEventListener(\"local-storage\", handleStorageChange);\n\n        return () => {\n            window.removeEventListener(\"storage\", handleStorageChange);\n            window.removeEventListener(\"local-storage\", handleStorageChange);\n        };\n    }, []);\n    return [storedValue, setValue];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"fontsource-roboto\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}